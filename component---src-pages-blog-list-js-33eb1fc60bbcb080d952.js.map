{"version":3,"sources":["webpack:///./src/pages/blogList.js"],"names":["blogList","props","match","console","log","location","search","p1","searchPattern","decode","s","decodeURIComponent","replace","query","substring","urlParams","exec","push","title","render","data","className","allMarkdownRemark","edges","map","node","frontmatter","tags","some","tag","includes","toLowerCase","key","id","date","author","body","excerpt","slug","fields","thumbnailImage"],"mappings":"iOAmFeA,UAtDE,SAAAC,GAEf,IAAIC,EADJC,QAAQC,IAAIH,EAAMI,SAASC,QAE3B,IAAIC,EAAK,MACLC,EAAgB,qBACdC,EAAS,SAASC,GACtB,OAAOC,mBAAmBD,EAAEE,QAAQL,EAAI,OAEtCM,EAAQZ,EAAMI,SAASC,OAAOQ,UAAU,GAC5CX,QAAQC,IAAIS,GAEZ,IADA,IAAIE,EAAY,GACRb,EAAQM,EAAcQ,KAAKH,IACE,MAA/BE,EAAUN,EAAOP,EAAM,KACzBa,EAAUN,EAAOP,EAAM,KAAO,CAACO,EAAOP,EAAM,KACzCa,EAAUN,EAAOP,EAAM,KAAKe,KAAKR,EAAOP,EAAM,KAGrD,OAFAC,QAAQC,IAAIW,GAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,MAAM,aACX,kBAAC,cAAD,CACEL,MA5CQ,aA6CRM,OAAQ,SAAAC,GACN,OACE,yBAAKC,UAAU,OACZD,EAAKE,kBAAkBC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACnC,OACsB,MAApBV,EAAS,KACTU,EAAKC,YAAYC,KAAKC,MAAK,SAAAC,GAAG,OAC5Bd,EAAS,IAAQe,SAASD,EAAIE,kBAI9B,kBAAC,IAAD,CACEC,IAAKP,EAAKQ,GACVf,MAAOO,EAAKC,YAAYR,MACxBgB,KAAMT,EAAKC,YAAYQ,KACvBC,OAAQV,EAAKC,YAAYS,OACzBC,KAAMX,EAAKY,QACXC,KAAMb,EAAKc,OAAOD,KAClBX,KAAMF,EAAKC,YAAYC,KACvBa,eAAgBf,EAAKC,YAAYc,iBAG3B,0CAxBtB,Y","file":"component---src-pages-blog-list-js-33eb1fc60bbcb080d952.js","sourcesContent":["import React from \"react\"\r\nimport { Link, StaticQuery } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport PostPreview from \"../components/postpreview\"\r\nconst indexQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n            author\r\n            tags\r\n            thumbnailImage\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst blogList = props => {\r\n  console.log(props.location.search)\r\n  let match\r\n  let p1 = /\\+/g\r\n  let searchPattern = /([^&=]+)=?([^&]*)/g\r\n  const decode = function(s) {\r\n    return decodeURIComponent(s.replace(p1, \" \"))\r\n  }\r\n  let query = props.location.search.substring(1)\r\n  console.log(query)\r\n  let urlParams = {}\r\n  while ((match = searchPattern.exec(query)))\r\n    if (urlParams[decode(match[1])] == null)\r\n      urlParams[decode(match[1])] = [decode(match[2])]\r\n    else urlParams[decode(match[1])].push(decode(match[2]))\r\n  console.log(urlParams)\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Page two\" />\r\n      <StaticQuery\r\n        query={indexQuery}\r\n        render={data => {\r\n          return (\r\n            <div className=\"row\">\r\n              {data.allMarkdownRemark.edges.map(({ node }) => {\r\n                if (\r\n                  urlParams[\"tag\"] == null ||\r\n                  node.frontmatter.tags.some(tag =>\r\n                    urlParams[\"tag\"].includes(tag.toLowerCase())\r\n                  )\r\n                )\r\n                  return (\r\n                    <PostPreview\r\n                      key={node.id}\r\n                      title={node.frontmatter.title}\r\n                      date={node.frontmatter.date}\r\n                      author={node.frontmatter.author}\r\n                      body={node.excerpt}\r\n                      slug={node.fields.slug}\r\n                      tags={node.frontmatter.tags}\r\n                      thumbnailImage={node.frontmatter.thumbnailImage}\r\n                    />\r\n                  )\r\n                else return <></>\r\n              })}\r\n            </div>\r\n          )\r\n        }}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default blogList\r\n"],"sourceRoot":""}