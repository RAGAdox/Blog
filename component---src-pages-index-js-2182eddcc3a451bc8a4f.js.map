{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/markdownComponents/image.js"],"names":["IndexPage","title","className","query","render","data","allMarkdownRemark","edges","slice","map","node","key","id","frontmatter","date","author","body","excerpt","slug","fields","tags","fluid","image","childImageSharp","to","Image","props","name","style","colValue","col","float","display","fluidData","allFile","forEach","element","relativePath","console","log"],"mappings":"mMA8EeA,UArCG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SAEX,yBAAKC,UAAU,qCACb,+CACA,kBAAC,cAAD,CACEC,MAxCQ,YAyCRC,OAAQ,SAAAC,GAGN,OACE,yBAAKH,UAAU,OACZG,EAAKC,kBAAkBC,MAAMC,MAAM,EAAG,GAAGC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAC/C,OACE,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVX,MAAOS,EAAKG,YAAYZ,MACxBa,KAAMJ,EAAKG,YAAYC,KACvBC,OAAQL,EAAKG,YAAYE,OACzBC,KAAMN,EAAKO,QACXC,KAAMR,EAAKS,OAAOD,KAClBE,KAAMV,EAAKG,YAAYO,KACvBC,MAAOX,EAAKG,YAAYS,MAAMC,gBAAgBF,aAjB5D,SAyBA,yCAEF,kBAAC,OAAD,CAAMG,GAAG,YAAT,mB,sGC3BWC,IA3CD,SAAAC,GACZ,IAAMrB,EAAI,OAgBV,GAAIqB,EAAMC,KAAM,CACd,IAAMC,EAAQ,CACZC,SAAUH,EAAMI,IAAMJ,EAAMI,IAAM,GAClCC,MAAOL,EAAMK,MAAQL,EAAMK,MAAQ,OACnCC,QAASN,EAAMM,QAAUN,EAAMM,QAAU,SAEvCC,EAAY,KAOhB,OANA5B,EAAK6B,QAAQ3B,MAAM4B,SAAQ,SAAAC,GACrBA,EAAQ1B,KAAK2B,eAAiBX,EAAMC,OACtCW,QAAQC,IAAI,YAAaH,EAAQ1B,KAAKa,gBAAgBF,OACtDY,EAAYG,EAAQ1B,KAAKa,gBAAgBF,UAG5B,MAAbY,EAEA,kBAAC,IAAD,CACEZ,MAAOY,EACP/B,UAAS,UAAY0B,EAAMC,SAAlB,MAAgCD,EAAMI,QAAtC,UAAuDJ,EAAMG,MAA7D,WAGD,8CAEd,OAAO,uC","file":"component---src-pages-index-js-2182eddcc3a451bc8a4f.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { useStaticQuery, withPrefix, graphql, StaticQuery } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Image from \"../components/markdownComponents/image\"\r\nimport PostPreview from \"../components/postpreview\"\r\nimport SEO from \"../components/seo\"\r\nconst indexQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n            author\r\n            tags\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 600, maxHeight: 600) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n\r\n    <div className=\"row d-flex justify-content-center\">\r\n      <h2>Latest Posts :-</h2>\r\n      <StaticQuery\r\n        query={indexQuery}\r\n        render={data => {\r\n          //console.log(data)\r\n\r\n          return (\r\n            <div className=\"row\">\r\n              {data.allMarkdownRemark.edges.slice(0, 3).map(({ node }) => {\r\n                return (\r\n                  <PostPreview\r\n                    key={node.id}\r\n                    title={node.frontmatter.title}\r\n                    date={node.frontmatter.date}\r\n                    author={node.frontmatter.author}\r\n                    body={node.excerpt}\r\n                    slug={node.fields.slug}\r\n                    tags={node.frontmatter.tags}\r\n                    fluid={node.frontmatter.image.childImageSharp.fluid}\r\n                  />\r\n                )\r\n              })}\r\n            </div>\r\n          )\r\n        }}\r\n      />\r\n      <p>Load More</p>\r\n    </div>\r\n    <Link to=\"/page-2/\">Go to page 2</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport { element } from \"prop-types\"\r\nconst Image = props => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allFile(filter: { ext: { regex: \"/jpeg|jpg|png/\" } }) {\r\n        edges {\r\n          node {\r\n            childImageSharp {\r\n              fluid(maxWidth: 600) {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n            relativePath\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  if (props.name) {\r\n    const style = {\r\n      colValue: props.col ? props.col : 12,\r\n      float: props.float ? props.float : \"none\",\r\n      display: props.display ? props.display : \"block\",\r\n    }\r\n    let fluidData = null\r\n    data.allFile.edges.forEach(element => {\r\n      if (element.node.relativePath === props.name) {\r\n        console.log(\"The image\", element.node.childImageSharp.fluid)\r\n        fluidData = element.node.childImageSharp.fluid\r\n      }\r\n    })\r\n    if (fluidData != null) {\r\n      return (\r\n        <Img\r\n          fluid={fluidData}\r\n          className={`col-sm-${style.colValue} d-${style.display} float-${style.float} image`}\r\n        />\r\n      )\r\n    } else return <p>Image Not Found</p>\r\n  } else {\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default Image\r\n"],"sourceRoot":""}